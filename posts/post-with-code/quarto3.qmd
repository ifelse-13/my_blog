---
title: "TD3"
author: "Niamiti Bethel TOUMAN"
date: "Mars 2024"
categories: [travaux dirigés]
---

```{r setup, include=FALSE, message=FALSE,warning=FALSE}
knitr::opts_chunk$set(echo = TRUE,warning = FALSE,message = FALSE)

```

IMPORARTION DES LIBRAIRIES

```{r}
library(stringr)
library(lubridate)
library(arrow)
library(dplyr)
library(tidyr)
library(tidyverse)
library(jsonlite)
library(RSQLite)

```

## Import et lecture des données

#### Question 1

Listez les fichiers présents dans le dossier data. Quelles sont les extensions des différents fichiers ?

```{r}
list.files("data/")

```

Les différents fichiers présents dans le dossier data sont "data.sqlite", "olympics_athletes.json", "tokyo_athletes.parquet" qui sont respectivement aux formats "sqlite", "json" et "parquet".

#### Question 2

Lisez le fichier .parquet en utilisant la librairie arrow. Quelles sont les dimensions de la table ? Quelles sont les colonnes présentes ?

```{r}
data_parquet <- arrow::read_parquet("data/tokyo_athletes.parquet")
dim(data_parquet)
colnames(data_parquet)
```

La lecture du fichier se fait avec la fonction read_parquet du package arrow et nous avons 11 085 lignes et 3 colonnes dans la base. La base "data_parquet" est composée des colonnes "Name", "NOC", "Discipline".

#### Question 3

Lisez le fichier .json en utilisant la librairie jsonlite. Quelles sont les dimensions de la table ? Quelles sont les colonnes présentes ?

```{r}
data_json <- jsonlite::read_json("data/olympics_athletes.json",simplifyVector = TRUE)
dim(data_json)
colnames(data_json)
# l'argument "simplifyVector=TRUE" permet de retourner un data frame


```

La base de données comprend 13 colonnes et 269 731 lignes. Les colonnes représentent des variables. Les differentes variables de la base sont "ID", "Name", "Sex", "Age", "Height", "Weight", "Team", "NOC", "Games", "City", "Sport", "Event", "Medal".

#### Question 4

Importez la librairie RSQLite, et ouvrez une connexion à la base de données sqlite en utilisant la fonction dbConnect. Le driver à utiliser sera SQLite(). Quelles sont les tables présentes dans la table ? Vous pourrez utiliser la fonction dbListTables.

```{r}


connection <-dbConnect(RSQLite::SQLite(),dbname="data/data.sqlite")
dbListTables(connection)
```

Les differentes tables présentes dans la base de données sont "tokyo_medals" et "tokyo_teams".

#### Question 5

Créez deux nouvelles tables dans la base de données à l\'aide de la fonction dbWriteTable. Les tables s\'appeleront respectivement olympics_athletes et tokyo_athletes pour les fichiers olympics_athletes.json et tokyo_athletes.parquet.

```{r}

dbWriteTable(connection,"tokyo_athletes",data_parquet)

dbWriteTable(conn = connection,name = "olympics_athletes", value = data_json)
dbListTables(connection)
```

#### Question 6

Inspectez la table olympics_athletes en utilisant la fonction dbListFields. Quelles sont les colonnes de la table ?

```{r}
dbListFields(conn = connection,name = "olympics_athletes")
```

La table "olympics_athletes" comprend les colonnes suivantes: "ID", "Name", "Sex", "Age", "Height", "Weight", "Team", "NOC", "Games", "City", "Sport", "Event", "Medal".

#### Question 7

Importez cette table depuis la base de données en utilisant la fonction dbReadTable. Convertissez la table en tibble en utilisant la fonction as_tibble.

```{r}
base_oly_ath <- dbReadTable(conn = connection,name = "olympics_athletes") |> as.tibble()
class(base_oly_ath)
```

## dplyr, tidyr

#### Question 8

Convertissez la colonne Sex en variable catégorielle avec la fonction mutate.

```{r}
base_oly_ath |> 
  mutate(
    Sex=factor(Sex)
  )


```

#### Question 9

Créez deux colonnes à partir de la colonne Games. La première colonne Year sera une colonne de type integer contenant l\'année des jeux. La deuxième colonne isSummer sera une colonne booléenne qui indiquera si les jeux sont des jeux d\'été ou d\'hiver. Vous pourrez utiliser la fonction separate_wider_delim de tidyr notamment.

```{r}
base_oly_ath <- base_oly_ath |> separate_wider_delim(
  Games,delim = " ",names = c("Year","isSummer")
)
base_oly_ath <- base_oly_ath |> 
  mutate(
    Year = as.integer(Year),
    isSummer = case_when(
      isSummer=="Summer"~"Yes",
      TRUE~"No"
    )
  )
base_oly_ath$isSummer=factor(base_oly_ath$isSummer)
```

#### Question 10

Calculez la moyenne d\'age des athletes pour chacune des éditions des JO d\'été. Quelle édition a compté les athlètes les plus jeunes ? Les plus vieux ?

```{r}
moyenne <- base_oly_ath |> filter(isSummer=="Yes") |> 
  group_by(Year) |> summarise(
    moyenne_age = mean(Age,na.rm = TRUE)
  ) 
moyenne|> filter(moyenne_age==min(moyenne_age))
moyenne |> filter(moyenne_age==max(moyenne_age))
```

L'édition ayant compté les athlètes les plus jeunes est celle de 1896 avec un âge moyen de 23.6 ans tandis que l'édition qui a compté les athlètes les plus vieux est celle de 1932 avec 30.2 ans comme moyenne d'âge.

#### Question 11

Quelle est la discipline des JO d\'été dont la taille des athlètes féminines est la plus grande ? Quelle a été cette discipline au cours de chacune des éditions ? Calculez le nombre de fois où chaque discipline a été la discipline avec les plus grandes athlètes.

```{r}

#
base_oly_ath |>filter(isSummer=="Yes") |> 
  filter(Sex=="F") |>
  filter(Height==max(Height,na.rm = TRUE)) #|> pull(Sport)
#
base_oly_ath |>filter(isSummer=="Yes") |> 
  filter(Sex=="F") |> group_by(Year) |> 
  filter(Height==max(Height,na.rm = TRUE)) |> select(Year, Sport) |>
  arrange(Year) |> print(n=50)
```

## stringr, lubridate

#### Question 12

```{r}
texte <-c("Les jeux olympiques d’été se déroulent normalement tous les 4 ans, durant les mois
 de Juillet et Août. Les jeux de Rio ont eu lieu du 5 Août 2016 au 20 Août 2016,
 ceux de Tokyo du 23 Juillet 2021 au 8 Août 2021, et ceux de Paris auront lieu du
 26 Juillet 2024 au 11 Août 2024. Plus de 10000 athlètes sont attendus du monde
 entier à Paris.")
```
