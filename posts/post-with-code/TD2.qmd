---
title: "TD2"
author: "Niamiti Bethel TOUMAN"
date: "9 March 2024"
categories: [travaux dirigés]
---


```{r setup, include=FALSE, message=FALSE,warning=FALSE}
knitr::opts_chunk$set(echo = TRUE,warning = FALSE,message = FALSE)

```

```{r}
library(rvest)
library(purrr)
library(dplyr)
library(tidyverse)
```

#### Question 1

Lancez la commande suivante :

```{r}
list_tables <-
  session("https://fr.wikipedia.org/wiki/Liste_des_m%C3%A9daill%C3%A9s_olympiques") |>
  html_elements(".wikitable") |>
  html_table()

```

List_tables contient un ensemble de lites obtenues sur le lien founri dans la commande ci-dessus.

#### Question 2

Nous allons tout d'abord nous intéresser à la première table. Créez un objet intitulé data_medailles_sport_ete contenant le premier élément de list_tables. La table n'est pas bien formattée. Supprimez la première colonne, les noms de colonnes et la première ligne. Renommez les colonnes en c("Discipline", "Annees", "Editions", "Epreuves_2020", "Or", "Argent", "Bronze", "Total", "Athletes_medailles", "Athletes_or"). Les colonnes Editions, Epreuves_2020, Or, Argent, Bronze, Total seront converties en colonnes d'entiers.

```{r}
data_medailles_sport_ete=list_tables[[1]]
data_medailles_sport_ete=data_medailles_sport_ete[-1,-1]
```

```{r}
nouveau=c("Discipline", "Annees", "Editions",
          "Epreuves_2020", "Or", "Argent", "Bronze", "Total", "Athletes_medailles",
          "Athletes_or")
colnames(data_medailles_sport_ete)<-nouveau
data_medailles_sport_ete[, 3:8] <- sapply(data_medailles_sport_ete[, 3:8],as.integer)
```

#### Question 3

Quelles sont les 3 disciplines avec le plus de médailles distribuées depuis le début de l'histoire des jeux olympiques ?

```{r}
data_medailles_sport_ete |> 
  arrange(desc(Total)) |> 
  slice(1:3)

```

Les trois disciplines sont l'Athlétisme, la Natation(hommes, femmes) et la Lutte.

#### Question 4

Quelles sont les disciplines avec le moins d'épreuves en 2020 ?

```{r}
data_medailles_sport_ete |> 
  arrange(Epreuves_2020) |> slice(1:8)
```

Les disciplines avec le moins d'épreuves sont le Football, le Golf, le Handball, le Hockey sur gazon, la Natation synchronisée, Pentathlon moderne, le Volley-ball, et le Water polo avec 2 épreuves.

#### Question 5

La colonne Editions nous renseigne sur le nombre total d'apparence des disciplines aux JO d'été. Nous souhaitons vérifier ce calcul en implémentant notre propre fonction calcul_nb_editions_int. Dans un premier temps, la fonction calcul_nb_editions prendra en entrée un paramètre depuis, de type entier, qui représente depuis quelle année la discipline est au programme.

```{r}
calcul_nb_editions_int <- function(depuis){
  annee <- 2020
  int <- 4
  x <- ((annee-depuis)/4)+1
  if (depuis<1916){
    nb_ed <- x-3
    nb_ed
  }
  if(depuis>1916){
    nb_ed <- x-2
    nb_ed
  }
  if(depuis>1944){
    nb_ed <- x
    nb_ed
  }
  nb_ed
}
```

#### Question 6

Dans certains cas, les disciplines ont été au programme de façon discontinue. Proposez une nouvelle fonction calcul_nb_editions_str qui prendra cette fois-ci en entrée des chaînes de caractères. Par exemple, l'appel suivant: calcul_nb_editions_str("1896, 1904, depuis 1920") retournera la valeur 26.

```{r}

  calcul_nb_editions_str <- function(x){
    
    z <- str_split(x,",",simplify = TRUE)
    r <- as.matrix(ifelse(!grepl("depuis|-",z),"P",z))
    # permet de compter le nombre de valeur unique pour l'année 
    
    res_annee <- 0
    res_depuis <- 0
    res_tiret <- 0
    
    calcul_nb_editions_int <- function(depuis){
      annee <- 2020
      int <- 4
      x <- ((annee-depuis)/4)+1
      if (depuis<1916){
        nb_ed <- x-3
        nb_ed
      }
      if(depuis>1916){
        nb_ed <- x-2
        nb_ed
      }
      if(depuis>1944){
        nb_ed <- x
        nb_ed
      }
      return(nb_ed)
    }
    
    calcul_nb_editions_interne  <- function(deb,fi){
      
      int <- 4
      x <- ((fi-deb)/4)+1
      if (fi < 1916 & deb < 1916){
        nb_ed <- x
        nb_ed
      }
      if (deb < 1916 & fi < 1944){
        nb_ed <- x-1
        nb_ed
      }
      if (deb < 1916 & fi> 1944){
        nb_ed <- x-3
        nb_ed
      }
      if(deb>1916 & fi < 1944){
        nb_ed <- x
        nb_ed
      }
      if(deb > 1916 & fi > 1944){
        nb_ed <- x-2
        nb_ed
      }
      
      if (deb > 1944 & fi > 1944){
        nb_ed <- x
        nb_ed
      }
      
      return(nb_ed)
    }
    
    
    for (j in 1:nrow(r)) {
      if (any(str_detect(r[j, 1], "-"))) {
        e <- sapply(str_split(r[j, 1], "-"), as.integer)
        debut <- e[1, 1]
        fin <- e[2, 1]
        res_tiret <- calcul_nb_editions_interne(debut, fin)
      }
      
      if (any(str_detect(r[j, 1], "depuis"))) {
        d <- as.integer(str_extract_all(r[j, 1], "\\d+"))
        res_depuis <- calcul_nb_editions_int(d)
      }
      
      if(is.character(r[j, 1])){
        sp <- str_detect(r,"P")
        res_annee <- sum(sp)  # premier cas de fonction 
      }
    }
    
    resultat <- sum(res_depuis, res_tiret, res_annee)
    return(resultat)
    
    
  }
 calcul_nb_editions_str("1896, 1904, depuis 1920")
  
```

#### Question 7

Définissez une fonction générique calcul_nb_editions et deux implémentations calcul_nb_editions.integer et 'calcul_nb_editions.character.

```{r}

calcul_nb_editions <- function(temps){
  
  calcul_nb_editions.integer <- function(x){
    result <- length(x)
    return(result)
    
  }
  
  
  calcul_nb_editions.character <- function(x){
    
    z <- str_split(x,",",simplify = TRUE)
    r <- as.matrix(ifelse(!grepl("depuis|-",z),"P",z))
    # permet de compter le nombre de valeur unique pour l'année 
    
    res_annee <- 0
    res_depuis <- 0
    res_tiret <- 0
    
    calcul_nb_editions_int <- function(depuis){
      annee <- 2020
      int <- 4
      x <- ((annee-depuis)/4)+1
      if (depuis<1916){
        nb_ed <- x-3
        nb_ed
      }
      if(depuis>1916){
        nb_ed <- x-2
        nb_ed
      }
      if(depuis>1944){
        nb_ed <- x
        nb_ed
      }
      return(nb_ed)
    }
    
    calcul_nb_editions_interne  <- function(deb,fi){
      
      int <- 4
      x <- ((fi-deb)/4)+1
      if (fi < 1916 & deb < 1916){
        nb_ed <- x
        nb_ed
      }
      if (deb < 1916 & fi < 1944){
        nb_ed <- x-1
        nb_ed
      }
      if (deb < 1916 & fi> 1944){
        nb_ed <- x-3
        nb_ed
      }
      if(deb>1916 & fi < 1944){
        nb_ed <- x
        nb_ed
      }
      if(deb > 1916 & fi > 1944){
        nb_ed <- x-2
        nb_ed
      }
      
      if (deb > 1944 & fi > 1944){
        nb_ed <- x
        nb_ed
      }
      
      return(nb_ed)
    }
    
    
    for (j in 1:nrow(r)) {
      if (any(str_detect(r[j, 1], "-"))) {
        e <- sapply(str_split(r[j, 1], "-"), as.integer)
        debut <- e[1, 1]
        fin <- e[2, 1]
        res_tiret <- calcul_nb_editions_interne(debut, fin)
      }
      
      if (any(str_detect(r[j, 1], "depuis"))) {
        d <- as.integer(str_extract_all(r[j, 1], "\\d+"))
        res_depuis <- calcul_nb_editions_int(d)
      }
      
      if(is.character(r[j, 1])){
        sp <- str_detect(r,"P")
        res_annee <- sum(sp)  # premier cas de fonction 
      }
    }
    
    resultat <- sum(res_depuis, res_tiret, res_annee)
    return(resultat)
    
    
  }
  
  # declaration resultat 
  if(is.numeric(temps)){
    valeur_int <- calcul_nb_editions.integer(temps)
    return(valeur_int)
  }
  if(is.character(temps)){
    valeur_char <- calcul_nb_editions.character(temps)
    return(valeur_char)
  }
  # fin de la fonction 
  
}

calcul_nb_editions(2000)
calcul_nb_editions("1904–1924, depuis 1948")
```
