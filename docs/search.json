[
  {
    "objectID": "posts/post-with-code/index.html",
    "href": "posts/post-with-code/index.html",
    "title": "Post Blog",
    "section": "",
    "text": "Le package olympicsWeater est une librairie developpée dans le cadre d”un cours d’informatique de master 1 dans l’optique de faire des previsions meteorologiques pour les differents sites des jeux olympiques pour l”Edition 2024 de Paris.\nLa librairie contient une fonction générique get_forecast qui permet de donner les differentes prévisions métérologiques pour 7 jours avec comme arguemnt fourni, la donnée de géolocalisation qui peut etre une addresse complete en format caractere ou des donnees de latitude et longitude.\nCette fonction permet de requeter une API en extrayant les dates, les températures en degré celsius, les température ressentie, les probabilités de précipitation et les précipitations en mm.\nL’installation du package se fait à l’aide de la fonction install_github de la librairie remotes. La syntaxe à suivre est la suivante:\n\ninstall.packages(\"remotes\")  \nremotes::install_github(\"ifelse-13/olympicsWeather\")\nlibrary(olympicsWeather) \n# la ligne de code ci-dessous permet d'obtenir la doucmentation de la fonction get_forecast \n?get_forecast"
  },
  {
    "objectID": "posts/post-with-code/index.html#package-olympicsweather",
    "href": "posts/post-with-code/index.html#package-olympicsweather",
    "title": "Post Blog",
    "section": "",
    "text": "Le package olympicsWeater est une librairie developpée dans le cadre d”un cours d’informatique de master 1 dans l’optique de faire des previsions meteorologiques pour les differents sites des jeux olympiques pour l”Edition 2024 de Paris.\nLa librairie contient une fonction générique get_forecast qui permet de donner les differentes prévisions métérologiques pour 7 jours avec comme arguemnt fourni, la donnée de géolocalisation qui peut etre une addresse complete en format caractere ou des donnees de latitude et longitude.\nCette fonction permet de requeter une API en extrayant les dates, les températures en degré celsius, les température ressentie, les probabilités de précipitation et les précipitations en mm.\nL’installation du package se fait à l’aide de la fonction install_github de la librairie remotes. La syntaxe à suivre est la suivante:\n\ninstall.packages(\"remotes\")  \nremotes::install_github(\"ifelse-13/olympicsWeather\")\nlibrary(olympicsWeather) \n# la ligne de code ci-dessous permet d'obtenir la doucmentation de la fonction get_forecast \n?get_forecast"
  },
  {
    "objectID": "posts/post-with-code/index.html#les-prévisions-météo",
    "href": "posts/post-with-code/index.html#les-prévisions-météo",
    "title": "Post Blog",
    "section": "Les prévisions météo",
    "text": "Les prévisions météo\nLa fonction get_forecast du package olympicsWeather sera utilisé pour les prévisions météorologiques pour les différentes sections ci-dessus.\n\nLe stade de France\n\nmeteo_stade_de_france &lt;-olympicsWeather::get_forecast(\"Stade de france\") \n\nPassing 1 address to the Nominatim single address geocoder\n\n\nQuery completed in: 1 seconds\n\n\nWarning: `as.tibble()` was deprecated in tibble 2.0.0.\nℹ Please use `as_tibble()` instead.\nℹ The signature and semantics have changed, see `?as_tibble`.\nℹ The deprecated feature was likely used in the olympicsWeather package.\n  Please report the issue to the authors.\n\n\n\n\nTahiti\n\nmeteo_tahiti &lt;-olympicsWeather::get_forecast(\"Tahiti\")\n\nPassing 1 address to the Nominatim single address geocoder\n\n\nQuery completed in: 1 seconds\n\n\n\n\nCoordonnées GPS 43.276703, 5.334791\n\nmeteo_gps &lt;-olympicsWeather::get_forecast(c(43.276703,5.334791))"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "BLOG",
    "section": "",
    "text": "Welcome To My Blog\n\n\n\n\n\n\n\nnews\n\n\n\n\n\n\n\n\n\n\n\nMar 4, 2024\n\n\nTristan O’Malley\n\n\n\n\n\n\n  \n\n\n\n\nTD1\n\n\n\n\n\n\n\ntravaux dirigés\n\n\n\n\n\n\n\n\n\n\n\nMar 1, 2024\n\n\nNiamiti Bethel TOUMAN\n\n\n\n\n\n\n  \n\n\n\n\nPackage usage\n\n\n\n\n\n\n\npackage\n\n\n\n\n\n\n\n\n\n\n\nMar 1, 2024\n\n\nNiamiti Bethel TOUMAN\n\n\n\n\n\n\n  \n\n\n\n\nPost Blog\n\n\n\n\n\n\n\nnews\n\n\ncode\n\n\nanalysis\n\n\n\n\n\n\n\n\n\n\n\nMar 1, 2024\n\n\nNiamiti Bethel TOUMAN\n\n\n\n\n\n\n  \n\n\n\n\nWelcome To My Blog\n\n\n\n\n\n\n\nnews\n\n\n\n\n\n\n\n\n\n\n\nMar 1, 2024\n\n\nNiamiti TOUMAN\n\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "About this blog"
  },
  {
    "objectID": "posts/welcome/index.html",
    "href": "posts/welcome/index.html",
    "title": "Welcome To My Blog",
    "section": "",
    "text": "Bienvenue sur le blog de publication des ressources R.\n\nSince this post doesn’t specify an explicit image, the first image in the post will be used in the listing page of posts."
  },
  {
    "objectID": "docs/posts/new_post/index.html",
    "href": "docs/posts/new_post/index.html",
    "title": "Package usage",
    "section": "",
    "text": "Le package olympicsWeater est une librairie développée dans le cadre d’un cours d’informatique de master 1 dans l’optique de faire des prévisions météorologiques pour les différents sites des jeux olympiques pour l’Edition 2024 de Paris.\nLa librairie contient une fonction générique get_forecast qui permet de donner les différentes prévisions métérologiques pour 7 jours avec comme arguemnt fourni, la donnée de géolocalisation qui peut être une addresse complète en format caractère ou des données de latitude et longitude.\nCette fonction permet de requêter une API en extrayant les dates, les températures en degré celsius, les températures ressenties, les probabilités de précipitation et les précipitations en mm.\nL’installation du package se fait à l’aide de la fonction install_github de la librairie “remotes”. La syntaxe à suivre est la suivante:\n\ninstall.packages(\"remotes\")  \nremotes::install_github(\"ifelse-13/olympicsWeather\")\nlibrary(olympicsWeather) \n# la ligne de code ci-dessous permet d'obtenir la doucmentation de la fonction get_forecast \n?get_forecast"
  },
  {
    "objectID": "docs/posts/new_post/index.html#package-olympicsweather",
    "href": "docs/posts/new_post/index.html#package-olympicsweather",
    "title": "Package usage",
    "section": "",
    "text": "Le package olympicsWeater est une librairie développée dans le cadre d’un cours d’informatique de master 1 dans l’optique de faire des prévisions météorologiques pour les différents sites des jeux olympiques pour l’Edition 2024 de Paris.\nLa librairie contient une fonction générique get_forecast qui permet de donner les différentes prévisions métérologiques pour 7 jours avec comme arguemnt fourni, la donnée de géolocalisation qui peut être une addresse complète en format caractère ou des données de latitude et longitude.\nCette fonction permet de requêter une API en extrayant les dates, les températures en degré celsius, les températures ressenties, les probabilités de précipitation et les précipitations en mm.\nL’installation du package se fait à l’aide de la fonction install_github de la librairie “remotes”. La syntaxe à suivre est la suivante:\n\ninstall.packages(\"remotes\")  \nremotes::install_github(\"ifelse-13/olympicsWeather\")\nlibrary(olympicsWeather) \n# la ligne de code ci-dessous permet d'obtenir la doucmentation de la fonction get_forecast \n?get_forecast"
  },
  {
    "objectID": "docs/posts/new_post/index.html#les-prévisions-météo",
    "href": "docs/posts/new_post/index.html#les-prévisions-météo",
    "title": "Post Blog",
    "section": "Les prévisions météo",
    "text": "Les prévisions météo\nLa fonction get_forecast du package olympicsWeather sera utilisé pour les prévisions météorologiques pour les différentes sections ci-dessus.\n\nLe stade de France\n\nmeteo_stade_de_france &lt;-olympicsWeather::get_forecast(\"Stade de france\")|&gt; print(n=10)\n\nPassing 1 address to the Nominatim single address geocoder\n\n\nQuery completed in: 2.1 seconds\n\n\n# A tibble: 168 × 5\n   date_heure temperature_celsius temperature_ressentie_ce…¹ precipitation_proba\n   &lt;list&gt;     &lt;list&gt;              &lt;list&gt;                     &lt;list&gt;             \n 1 &lt;chr [1]&gt;  &lt;dbl [1]&gt;           &lt;dbl [1]&gt;                  &lt;int [1]&gt;          \n 2 &lt;chr [1]&gt;  &lt;dbl [1]&gt;           &lt;dbl [1]&gt;                  &lt;int [1]&gt;          \n 3 &lt;chr [1]&gt;  &lt;dbl [1]&gt;           &lt;dbl [1]&gt;                  &lt;int [1]&gt;          \n 4 &lt;chr [1]&gt;  &lt;dbl [1]&gt;           &lt;dbl [1]&gt;                  &lt;int [1]&gt;          \n 5 &lt;chr [1]&gt;  &lt;dbl [1]&gt;           &lt;dbl [1]&gt;                  &lt;int [1]&gt;          \n 6 &lt;chr [1]&gt;  &lt;dbl [1]&gt;           &lt;dbl [1]&gt;                  &lt;int [1]&gt;          \n 7 &lt;chr [1]&gt;  &lt;dbl [1]&gt;           &lt;dbl [1]&gt;                  &lt;int [1]&gt;          \n 8 &lt;chr [1]&gt;  &lt;dbl [1]&gt;           &lt;dbl [1]&gt;                  &lt;int [1]&gt;          \n 9 &lt;chr [1]&gt;  &lt;dbl [1]&gt;           &lt;dbl [1]&gt;                  &lt;int [1]&gt;          \n10 &lt;chr [1]&gt;  &lt;dbl [1]&gt;           &lt;dbl [1]&gt;                  &lt;int [1]&gt;          \n# ℹ 158 more rows\n# ℹ abbreviated name: ¹​temperature_ressentie_celsius\n# ℹ 1 more variable: precipitation &lt;list&gt;\n\n\n\n\nTahiti\n\nmeteo_tahiti &lt;-olympicsWeather::get_forecast(\"Tahiti\") |&gt; print(n=10)\n\nPassing 1 address to the Nominatim single address geocoder\n\n\nQuery completed in: 1 seconds\n\n\n# A tibble: 168 × 5\n   date_heure temperature_celsius temperature_ressentie_ce…¹ precipitation_proba\n   &lt;list&gt;     &lt;list&gt;              &lt;list&gt;                     &lt;list&gt;             \n 1 &lt;chr [1]&gt;  &lt;dbl [1]&gt;           &lt;dbl [1]&gt;                  &lt;int [1]&gt;          \n 2 &lt;chr [1]&gt;  &lt;dbl [1]&gt;           &lt;dbl [1]&gt;                  &lt;int [1]&gt;          \n 3 &lt;chr [1]&gt;  &lt;dbl [1]&gt;           &lt;dbl [1]&gt;                  &lt;int [1]&gt;          \n 4 &lt;chr [1]&gt;  &lt;dbl [1]&gt;           &lt;dbl [1]&gt;                  &lt;int [1]&gt;          \n 5 &lt;chr [1]&gt;  &lt;dbl [1]&gt;           &lt;dbl [1]&gt;                  &lt;int [1]&gt;          \n 6 &lt;chr [1]&gt;  &lt;dbl [1]&gt;           &lt;dbl [1]&gt;                  &lt;int [1]&gt;          \n 7 &lt;chr [1]&gt;  &lt;dbl [1]&gt;           &lt;dbl [1]&gt;                  &lt;int [1]&gt;          \n 8 &lt;chr [1]&gt;  &lt;dbl [1]&gt;           &lt;dbl [1]&gt;                  &lt;int [1]&gt;          \n 9 &lt;chr [1]&gt;  &lt;dbl [1]&gt;           &lt;dbl [1]&gt;                  &lt;int [1]&gt;          \n10 &lt;chr [1]&gt;  &lt;dbl [1]&gt;           &lt;dbl [1]&gt;                  &lt;int [1]&gt;          \n# ℹ 158 more rows\n# ℹ abbreviated name: ¹​temperature_ressentie_celsius\n# ℹ 1 more variable: precipitation &lt;list&gt;\n\n\n\n\nCoordonnées GPS 43.276703, 5.334791\n\nmeteo_gps &lt;-olympicsWeather::get_forecast(c(43.276703,5.334791))|&gt; print(n=10)\n\n# A tibble: 168 × 5\n   date_heure temperature_celsius temperature_ressentie_ce…¹ precipitation_proba\n   &lt;list&gt;     &lt;list&gt;              &lt;list&gt;                     &lt;list&gt;             \n 1 &lt;chr [1]&gt;  &lt;dbl [1]&gt;           &lt;dbl [1]&gt;                  &lt;int [1]&gt;          \n 2 &lt;chr [1]&gt;  &lt;dbl [1]&gt;           &lt;dbl [1]&gt;                  &lt;int [1]&gt;          \n 3 &lt;chr [1]&gt;  &lt;dbl [1]&gt;           &lt;dbl [1]&gt;                  &lt;int [1]&gt;          \n 4 &lt;chr [1]&gt;  &lt;dbl [1]&gt;           &lt;dbl [1]&gt;                  &lt;int [1]&gt;          \n 5 &lt;chr [1]&gt;  &lt;dbl [1]&gt;           &lt;dbl [1]&gt;                  &lt;int [1]&gt;          \n 6 &lt;chr [1]&gt;  &lt;dbl [1]&gt;           &lt;dbl [1]&gt;                  &lt;int [1]&gt;          \n 7 &lt;chr [1]&gt;  &lt;dbl [1]&gt;           &lt;dbl [1]&gt;                  &lt;int [1]&gt;          \n 8 &lt;chr [1]&gt;  &lt;dbl [1]&gt;           &lt;dbl [1]&gt;                  &lt;int [1]&gt;          \n 9 &lt;chr [1]&gt;  &lt;dbl [1]&gt;           &lt;dbl [1]&gt;                  &lt;int [1]&gt;          \n10 &lt;chr [1]&gt;  &lt;dbl [1]&gt;           &lt;dbl [1]&gt;                  &lt;int [1]&gt;          \n# ℹ 158 more rows\n# ℹ abbreviated name: ¹​temperature_ressentie_celsius\n# ℹ 1 more variable: precipitation &lt;list&gt;"
  },
  {
    "objectID": "docs/posts/new_post/index.html#les-prévisions-météorologiques",
    "href": "docs/posts/new_post/index.html#les-prévisions-météorologiques",
    "title": "Package usage",
    "section": "Les prévisions météorologiques",
    "text": "Les prévisions météorologiques\nLa fonction get_forecast du package “olympicsWeather” sera utilisée pour les prévisions météorologiques pour les différentes sections ci-dessus.\n\nLe stade de France\n\nmeteo_stade_de_france &lt;-olympicsWeather::get_forecast(\"Stade de france\")|&gt; print(n=10)\n\n# A tibble: 168 × 5\n   date_heure temperature_celsius temperature_ressentie_ce…¹ precipitation_proba\n   &lt;list&gt;     &lt;list&gt;              &lt;list&gt;                     &lt;list&gt;             \n 1 &lt;chr [1]&gt;  &lt;dbl [1]&gt;           &lt;dbl [1]&gt;                  &lt;int [1]&gt;          \n 2 &lt;chr [1]&gt;  &lt;dbl [1]&gt;           &lt;dbl [1]&gt;                  &lt;int [1]&gt;          \n 3 &lt;chr [1]&gt;  &lt;dbl [1]&gt;           &lt;dbl [1]&gt;                  &lt;int [1]&gt;          \n 4 &lt;chr [1]&gt;  &lt;dbl [1]&gt;           &lt;dbl [1]&gt;                  &lt;int [1]&gt;          \n 5 &lt;chr [1]&gt;  &lt;dbl [1]&gt;           &lt;dbl [1]&gt;                  &lt;int [1]&gt;          \n 6 &lt;chr [1]&gt;  &lt;dbl [1]&gt;           &lt;dbl [1]&gt;                  &lt;int [1]&gt;          \n 7 &lt;chr [1]&gt;  &lt;dbl [1]&gt;           &lt;dbl [1]&gt;                  &lt;int [1]&gt;          \n 8 &lt;chr [1]&gt;  &lt;dbl [1]&gt;           &lt;dbl [1]&gt;                  &lt;int [1]&gt;          \n 9 &lt;chr [1]&gt;  &lt;dbl [1]&gt;           &lt;dbl [1]&gt;                  &lt;int [1]&gt;          \n10 &lt;chr [1]&gt;  &lt;dbl [1]&gt;           &lt;dbl [1]&gt;                  &lt;int [1]&gt;          \n# ℹ 158 more rows\n# ℹ abbreviated name: ¹​temperature_ressentie_celsius\n# ℹ 1 more variable: precipitation &lt;list&gt;\n\n\n\n\nTahiti\n\nmeteo_tahiti &lt;-olympicsWeather::get_forecast(\"Tahiti\") |&gt; print(n=10)\n\n# A tibble: 168 × 5\n   date_heure temperature_celsius temperature_ressentie_ce…¹ precipitation_proba\n   &lt;list&gt;     &lt;list&gt;              &lt;list&gt;                     &lt;list&gt;             \n 1 &lt;chr [1]&gt;  &lt;dbl [1]&gt;           &lt;dbl [1]&gt;                  &lt;int [1]&gt;          \n 2 &lt;chr [1]&gt;  &lt;dbl [1]&gt;           &lt;dbl [1]&gt;                  &lt;int [1]&gt;          \n 3 &lt;chr [1]&gt;  &lt;dbl [1]&gt;           &lt;dbl [1]&gt;                  &lt;int [1]&gt;          \n 4 &lt;chr [1]&gt;  &lt;dbl [1]&gt;           &lt;dbl [1]&gt;                  &lt;int [1]&gt;          \n 5 &lt;chr [1]&gt;  &lt;dbl [1]&gt;           &lt;dbl [1]&gt;                  &lt;int [1]&gt;          \n 6 &lt;chr [1]&gt;  &lt;dbl [1]&gt;           &lt;dbl [1]&gt;                  &lt;int [1]&gt;          \n 7 &lt;chr [1]&gt;  &lt;dbl [1]&gt;           &lt;dbl [1]&gt;                  &lt;int [1]&gt;          \n 8 &lt;chr [1]&gt;  &lt;dbl [1]&gt;           &lt;dbl [1]&gt;                  &lt;int [1]&gt;          \n 9 &lt;chr [1]&gt;  &lt;dbl [1]&gt;           &lt;dbl [1]&gt;                  &lt;int [1]&gt;          \n10 &lt;chr [1]&gt;  &lt;dbl [1]&gt;           &lt;dbl [1]&gt;                  &lt;int [1]&gt;          \n# ℹ 158 more rows\n# ℹ abbreviated name: ¹​temperature_ressentie_celsius\n# ℹ 1 more variable: precipitation &lt;list&gt;\n\n\n\n\nCoordonnées GPS 43.276703, 5.334791\n\nmeteo_gps &lt;-olympicsWeather::get_forecast(c(43.276703,5.334791))|&gt; print(n=10)\n\n# A tibble: 168 × 5\n   date_heure temperature_celsius temperature_ressentie_ce…¹ precipitation_proba\n   &lt;list&gt;     &lt;list&gt;              &lt;list&gt;                     &lt;list&gt;             \n 1 &lt;chr [1]&gt;  &lt;dbl [1]&gt;           &lt;dbl [1]&gt;                  &lt;int [1]&gt;          \n 2 &lt;chr [1]&gt;  &lt;dbl [1]&gt;           &lt;dbl [1]&gt;                  &lt;int [1]&gt;          \n 3 &lt;chr [1]&gt;  &lt;dbl [1]&gt;           &lt;dbl [1]&gt;                  &lt;int [1]&gt;          \n 4 &lt;chr [1]&gt;  &lt;dbl [1]&gt;           &lt;dbl [1]&gt;                  &lt;int [1]&gt;          \n 5 &lt;chr [1]&gt;  &lt;dbl [1]&gt;           &lt;dbl [1]&gt;                  &lt;int [1]&gt;          \n 6 &lt;chr [1]&gt;  &lt;dbl [1]&gt;           &lt;dbl [1]&gt;                  &lt;int [1]&gt;          \n 7 &lt;chr [1]&gt;  &lt;dbl [1]&gt;           &lt;dbl [1]&gt;                  &lt;int [1]&gt;          \n 8 &lt;chr [1]&gt;  &lt;dbl [1]&gt;           &lt;dbl [1]&gt;                  &lt;int [1]&gt;          \n 9 &lt;chr [1]&gt;  &lt;dbl [1]&gt;           &lt;dbl [1]&gt;                  &lt;int [1]&gt;          \n10 &lt;chr [1]&gt;  &lt;dbl [1]&gt;           &lt;dbl [1]&gt;                  &lt;int [1]&gt;          \n# ℹ 158 more rows\n# ℹ abbreviated name: ¹​temperature_ressentie_celsius\n# ℹ 1 more variable: precipitation &lt;list&gt;"
  },
  {
    "objectID": "docs/posts/first_td/index.html",
    "href": "docs/posts/first_td/index.html",
    "title": "TD1",
    "section": "",
    "text": "Importation des librairies\n\nlibrary(tidyverse)\n\nL’importation de la base de données se fait par un read.csv2\n\ndata_ex=read.csv2(\"paris-2024-sites-olympiques-et-paralympiques-franciliens (1).csv\")\n\nVisualisation de la base et des caracteristiques\n\ndata_ex\n\n             geo_point                                             nom\n1  48.841319, 2.253076                                Parc des Princes\n2  48.924388, 2.359871                                 Stade de France\n3    48.751095, 2.0759                                   Golf national\n4  48.788046, 2.034987 Vélodrome National de Saint-Quentin-en-Yvelines\n5   48.84732, 2.245501                             Stade Roland Garros\n6  48.911184, 2.546395                                Clichy-sous-Bois\n7  48.830231, 2.289126         Arena Paris Sud 4 (Porte de Versailles)\n8  48.856858, 2.351415                         Hôtel de ville de Paris\n9    48.856262, 2.2914                                     Pont d'Iéna\n10 48.838649, 2.378496                                     Arena Bercy\n11 48.971314, 2.519183                                Arena Paris nord\n12 48.829624, 2.290777         Arena Paris Sud 6 (Porte de Versailles)\n13 48.865589, 2.321205                            Stade de la Concorde\n14 48.930873, 2.249836                            Stade Yves du Manoir\n15 48.854536, 2.300413                            Arena Champs de Mars\n16   48.89566, 2.22971                                La Défense Arena\n17 48.862229, 2.636374                                  Stade nautique\n18 48.832068, 2.284126         Arena Paris Sud 1 (Porte de Versailles)\n19 48.857232, 2.296084                               Stade Tour Eiffel\n20 48.787261, 2.034736          Stade BMX de Saint-Quentin-en-Yvelines\n21 48.899483, 2.361803                               Arena La Chapelle\n22 48.835157, 2.257363                       Stade Pierre de Coubertin\n23 48.923457, 2.355527                                Centre aquatique\n24  48.92467, 2.332428                               Village olympique\n25  48.815115, 2.08208                           Château de Versailles\n26 48.944207, 2.424716                              Village des médias\n27 48.944643, 2.408258             Terrain des Essences - La Courneuve\n28 48.788162, 1.967776                             Colline d'Elancourt\n29 48.866041, 2.312406                                    Grand Palais\n30 48.862286, 2.313222                                       Invalides\n31 48.937188, 2.420467                      Site d'escalade du Bourget\n     sites_olympiques_paralympiques\n1                    Site olympique\n2  Site olympique,Site paralympique\n3                    Site olympique\n4  Site olympique,Site paralympique\n5  Site olympique,Site paralympique\n6                 Site paralympique\n7  Site olympique,Site paralympique\n8                    Site olympique\n9                    Site olympique\n10 Site olympique,Site paralympique\n11 Site olympique,Site paralympique\n12 Site olympique,Site paralympique\n13                   Site olympique\n14                   Site olympique\n15 Site olympique,Site paralympique\n16 Site olympique,Site paralympique\n17 Site olympique,Site paralympique\n18 Site olympique,Site paralympique\n19 Site olympique,Site paralympique\n20                   Site olympique\n21 Site olympique,Site paralympique\n22                Site paralympique\n23                   Site olympique\n24                                 \n25 Site olympique,Site paralympique\n26                                 \n27                Site paralympique\n28                   Site olympique\n29 Site olympique,Site paralympique\n30 Site olympique,Site paralympique\n31                   Site olympique\n                                                             sports\n1                                                          Football\n2                                  Athlétisme,Para athlétisme,Rugby\n3                                                              Golf\n4                        Cyclisme sur piste,Para cyclisme sur piste\n5                                       Tennis,Tennis fauteuil,Boxe\n6                                           Para cyclisme sur route\n7                              Tennis de table,Para tennis de table\n8                                                        Athlétisme\n9                                     Cyclisme sur route,Athlétisme\n10     Basketball,Basket fauteuil,Gymnastique artistique,trampoline\n11                Boxe,Escrime,Pentathlon moderne,Volley-ball assis\n12                                  Haltérophilie,Handball,Goalball\n13                 Basketball 3x3,BMX freestyle,Breaking,Skateboard\n14                                                           Hockey\n15                              Judo,Para judo,Lutte,Rugby fauteuil\n16                                Natation,Para natation,Water-polo\n17                              Canoë,Para canoë,Aviron,Para aviron\n18                                                Volleyball,Boccia\n19                                     Volleyball de plage,Cécifoot\n20                                                         BMX race\n21 Badminton,Para Badminton,Gymnastique rythmique,Para powerlifting\n22                                                         Goalball\n23                          Natation artistique,Plongeon,Water-polo\n24                                                                 \n25              Sports équestres,Para équitation,Pentathlon moderne\n26                                                                 \n27                                                  Para athlétisme\n28                                                              VTT\n29                Escrime,Escrime fauteuil,Taekwondo,Para taekwondo\n30       Tir à l'arc,Para tir à l'arc,Athlétisme,Cyclisme sur route\n31                                                Escalade sportive\n\nstr(data_ex)\n\n'data.frame':   31 obs. of  4 variables:\n $ geo_point                     : chr  \"48.841319, 2.253076\" \"48.924388, 2.359871\" \"48.751095, 2.0759\" \"48.788046, 2.034987\" ...\n $ nom                           : chr  \"Parc des Princes\" \"Stade de France\" \"Golf national\" \"Vélodrome National de Saint-Quentin-en-Yvelines\" ...\n $ sites_olympiques_paralympiques: chr  \"Site olympique\" \"Site olympique,Site paralympique\" \"Site olympique\" \"Site olympique,Site paralympique\" ...\n $ sports                        : chr  \"Football\" \"Athlétisme,Para athlétisme,Rugby\" \"Golf\" \"Cyclisme sur piste,Para cyclisme sur piste\" ...\n\nsummary(data_ex)\n\n  geo_point             nom            sites_olympiques_paralympiques\n Length:31          Length:31          Length:31                     \n Class :character   Class :character   Class :character              \n Mode  :character   Mode  :character   Mode  :character              \n    sports         \n Length:31         \n Class :character  \n Mode  :character  \n\n\nLa base est constitué des variables qualitatives de type chaîne de caractères.\n\nQuestion 3\nCombien y a t’il de sites olympiques ?\n\ndata_ex |&gt; \n  count(sites_olympiques_paralympiques)\n\n    sites_olympiques_paralympiques  n\n1                                   2\n2                   Site olympique 10\n3 Site olympique,Site paralympique 16\n4                Site paralympique  3\n\ntable(grepl(\"Site olympique\",data_ex$sites_olympiques_paralympiques))\n\n\nFALSE  TRUE \n    5    26 \n\n\nNous avons 26 sites Olympiques.\n\n\nQuestion 4\nCombien y a t’il de sites paralympiques ?\n\ntable(grepl(\"Site paralympique\",data_ex$sites_olympiques_paralympiques))\n\n\nFALSE  TRUE \n   12    19 \n\n\nNous avons ici 19 sites paralympiques.\n\n\nQuestion 5\nQuels sont les sites qui accueillent plusieurs disciplines sportives ?\n\n  data_ex&lt;-data_ex |&gt; \n    mutate(many_sports=sapply(strsplit(data_ex$sports, \",\"), length)\n    )\n  plus_de_sport&lt;-data_ex |&gt; \n  filter(many_sports&gt;1)\ndim(plus_de_sport)\n\n[1] 19  5\n\n\nNous avons 19 sites qui accueillent plusieurs disciplines sportives.\n\n\nQuestion 6\nQuels sont les disciplines para-olympiques accueillies dans ces sites franciliens ?\n\ndonnees = as.tibble(data_ex)\n\nsites_paralympiques &lt;- donnees |&gt; \n  filter(str_detect(sites_olympiques_paralympiques, \"Site paralympique\"))\n\ndisciplines_paralympiques &lt;- sites_paralympiques |&gt; \n  pull(sports) |&gt; \n  strsplit(\",\") |&gt; \n  unlist() |&gt; \n  trimws()\nprint(disciplines_paralympiques)\n\n [1] \"Athlétisme\"              \"Para athlétisme\"        \n [3] \"Rugby\"                   \"Cyclisme sur piste\"     \n [5] \"Para cyclisme sur piste\" \"Tennis\"                 \n [7] \"Tennis fauteuil\"         \"Boxe\"                   \n [9] \"Para cyclisme sur route\" \"Tennis de table\"        \n[11] \"Para tennis de table\"    \"Basketball\"             \n[13] \"Basket fauteuil\"         \"Gymnastique artistique\" \n[15] \"trampoline\"              \"Boxe\"                   \n[17] \"Escrime\"                 \"Pentathlon moderne\"     \n[19] \"Volley-ball assis\"       \"Haltérophilie\"          \n[21] \"Handball\"                \"Goalball\"               \n[23] \"Judo\"                    \"Para judo\"              \n[25] \"Lutte\"                   \"Rugby fauteuil\"         \n[27] \"Natation\"                \"Para natation\"          \n[29] \"Water-polo\"              \"Canoë\"                  \n[31] \"Para canoë\"              \"Aviron\"                 \n[33] \"Para aviron\"             \"Volleyball\"             \n[35] \"Boccia\"                  \"Volleyball de plage\"    \n[37] \"Cécifoot\"                \"Badminton\"              \n[39] \"Para Badminton\"          \"Gymnastique rythmique\"  \n[41] \"Para powerlifting\"       \"Goalball\"               \n[43] \"Sports équestres\"        \"Para équitation\"        \n[45] \"Pentathlon moderne\"      \"Para athlétisme\"        \n[47] \"Escrime\"                 \"Escrime fauteuil\"       \n[49] \"Taekwondo\"               \"Para taekwondo\"         \n[51] \"Tir à l'arc\"             \"Para tir à l'arc\"       \n[53] \"Athlétisme\"              \"Cyclisme sur route\"     \n\ndisciplines_para &lt;- str_subset(disciplines_paralympiques, \"^Para\")\n\n# les différentes disciplines sont les suivantes:\nprint(unique(disciplines_para))\n\n [1] \"Para athlétisme\"         \"Para cyclisme sur piste\"\n [3] \"Para cyclisme sur route\" \"Para tennis de table\"   \n [5] \"Para judo\"               \"Para natation\"          \n [7] \"Para canoë\"              \"Para aviron\"            \n [9] \"Para Badminton\"          \"Para powerlifting\"      \n[11] \"Para équitation\"         \"Para taekwondo\"         \n[13] \"Para tir à l'arc\"       \n\n\n\n\nQuestion 7\nQuel(s) site(s) accueille(nt) le plus de disciplines différentes ?\n\nplus_de_sport |&gt; \n  arrange(desc(many_sports)) |&gt; select(nom) |&gt; head(8)\n\n                   nom\n1          Arena Bercy\n2     Arena Paris nord\n3 Stade de la Concorde\n4 Arena Champs de Mars\n5       Stade nautique\n6    Arena La Chapelle\n7         Grand Palais\n8            Invalides\n\n\nLes sites qui accueillent le plus de disciplines différentes sont: Arena Bercy, Arena Paris nord, Stade de la Concorde, Arena Champs de Mars, Stade nautique, Arena La Chapelle, Grand Palais, Invalides.\n\n\nQuestion 8\nQuel discipline aura lieu sur le plus grand nombre de sites ? Quels sont ces sites ?\n\ndisciplines_sites &lt;- donnees |&gt; \n  separate_rows(sports, sep = \",\")\n\noccurrences_disciplines &lt;- disciplines_sites |&gt; \n  group_by(sports) |&gt; \n  summarise(occurrences = n())\n\ndiscipline_max_occurrences &lt;- occurrences_disciplines |&gt; \n  filter(occurrences == max(occurrences))\n\nprint(discipline_max_occurrences)\n\n# A tibble: 1 × 2\n  sports     occurrences\n  &lt;chr&gt;            &lt;int&gt;\n1 Athlétisme           4\n\nsites_discipline_max_occurrences &lt;- disciplines_sites |&gt; \n  filter(sports == discipline_max_occurrences$sports) |&gt; \n  left_join(donnees, by = c(\"geo_point\", \"nom\", \"sites_olympiques_paralympiques\", \"sports\"))\n\nsites_discipline_max_occurrences |&gt; select(nom)\n\n# A tibble: 4 × 1\n  nom                    \n  &lt;chr&gt;                  \n1 Stade de France        \n2 Hôtel de ville de Paris\n3 Pont d'Iéna            \n4 Invalides              \n\n\nLa discipline qui aura lieu sur le plus grands nombre de sites est l’Athlétisme.\nLes differents sites concernés sont le Stade de France, Hôtel de ville de Paris, Pont d’Iéna et Invalides.\n\n\nQuestion 9\nA vol d’oiseau, quels sont les sites les deux sites les plus proches ?\n\nlibrary(geosphere)\ndonnees &lt;- donnees |&gt; \n  separate(geo_point, into = c(\"latitude\", \"longitude\"), sep = \",\") |&gt; \n  mutate(across(c(latitude, longitude), as.numeric))\n\ndf &lt;- as.data.frame(donnees)\nn &lt;- nrow(df)\n\ndonnees_distance &lt;- data.frame()\n\nfor (i in 1:(n - 1)) {\n  for (j in (i + 1): n) {\n    distance &lt;- distHaversine(\n      c(df[i, \"longitude\"], df[i, \"latitude\"]),\n      c(df[j, \"longitude\"], df[j, \"latitude\"])\n    )\ndddf &lt;- data.frame(\n  site_1=df[i,\"nom\"],\n  site_2=df[j,\"nom\"],\n  lon_1=df[i, \"longitude\"],\n  lat_1=df[i, \"latitude\"],\n  lon_2=df[j, \"longitude\"],\n  lat_2=df[j, \"latitude\"],\n  dis=distance\n)\ndonnees_distance &lt;- rbind(donnees_distance,dddf)\n  }\n}\n\nQ9 =donnees_distance |&gt; \n  filter(dis==min(dis))\nprint(Q9)\n\n                                           site_1\n1 Vélodrome National de Saint-Quentin-en-Yvelines\n                                  site_2    lon_1    lat_1    lon_2    lat_2\n1 Stade BMX de Saint-Quentin-en-Yvelines 2.034987 48.78805 2.034736 48.78726\n       dis\n1 89.30382\n\n\nLes deux sites les plus proches sont le Vélodrome national de Saint-Quentin-en-Yvelines et le Stade BMX de Saint-Quentin-en-Yvelines avec une distance de 89.30.\n\n\nQuestion 10\nQuels sont les deux sites les plus éloignés ?\n\nQ10 = donnees_distance |&gt; filter(dis==max(dis))\nprint(Q10)\n\n          site_1              site_2    lon_1    lat_1    lon_2    lat_2\n1 Stade nautique Colline d'Elancourt 2.636374 48.86223 1.967776 48.78816\n       dis\n1 49688.97\n\n\nLes deux sites les plus éloignés en terme de distance sont le Stade Nautique et Colline d’Elancourt avec une distance de 49688.97.\n\n\nQuestion 11\nVous êtes un heureux millionaire et souhaitez investir dans un bien immobilier. Vous décidez d’acheter un appartement situé au barycentre de l’ensemble des sites olympiques. Où se situe cet appartement ?\nLe barycentre correspond au centre de tous les points des sites c’est à dire les latitudes et longitudes moyennes des sites de la base de données.\n\nbarycentre &lt;- df |&gt; \n  summarise(\n    latitude = mean(latitude),\n    longitude = mean(longitude)\n  )\n\nlibrary(tidygeocoder)\n\nbarycentre |&gt; \n  reverse_geocode(lat = latitude,long = longitude)\n\n# A tibble: 1 × 3\n  latitude longitude address                                                    \n     &lt;dbl&gt;     &lt;dbl&gt; &lt;chr&gt;                                                      \n1     48.9      2.30 23, Avenue Pierre 1er de Serbie, Quartier de Chaillot, Par…\n\n\nL’addresse correspondante est 23 Avenue Pierre 1er de Serbie, Quartier de Chaillot, Paris 16e Arrondissement, Paris."
  },
  {
    "objectID": "docs/posts/welcome/index.html",
    "href": "docs/posts/welcome/index.html",
    "title": "Welcome To My Blog",
    "section": "",
    "text": "Bienvenue sur la page Blog Quarto de mon repertoire Github."
  }
]